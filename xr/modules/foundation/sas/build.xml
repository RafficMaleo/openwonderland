<?xml version="1.0" encoding="UTF-8"?>
<project name="sas" default="dist" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.sas}"/>
    <property name="modules.dir" location="${current.dir}/../.."/>
        
    <property name="module.src" value="org/jdesktop/wonderland/modules/sas"/>
    <property name="module.packagename" value="org.jdesktop.wonderland.modules.sas"/>
    <property name="module.jarname" value="sas"/>
    
    <property name="module-common.classpath" value="${current.dir}/../appbase/build/client/appbase-client.jar"/>

    <!-- TODO: there is no client but there is a provider. How to do this?
    <property name="module-client.classpath" value="${current.dir}/../appbase/build/client/appbase-client.jar"/>
    -->

    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>
       
    <target name="build" depends="-module-init, -module-compile-common, 
                                                -module-compile-server,
                                                -module-compile-client"/>
    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>
        
        <module name="sas" version="1" jarfile="${module.dist.dir}/${module.jarname}.jar"
                builddir="${build.dir}">

	  <!-- TODO: there is no client but there is a provider
           <client>
               <clientjar name="sas-client" basedir="${build.classes.dir}">
                    <include name="${module.src}/client/**"/>
                    <include name="${module.src}/common/**"/>
                </clientjar> 
           </client>
           -->

           <server>
                <serverjar name="sas-server" basedir="${build.classes.dir}">
                    <include name="${module.src}/server/**"/>
                    <include name="${module.src}/common/**"/>
                </serverjar>
            </server>
            
            <art dir="${current.dir}/art"/>
        </module>
    </target>                                                       
                                           
    <target name="deploy" depends="dist, -module-deploy"/>

    <target name="clean" depends="-module-clean"/>
</project>
