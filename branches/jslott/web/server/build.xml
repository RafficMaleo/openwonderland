<?xml version="1.0" encoding="UTF-8"?>
<project name="wonderland-webserver" default="all" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.wonderland-webserver}"/>
    
    <property name="web.src" value="org/jdesktop/wonderland/webserver"/>
    
    <import file="../build-tools/build-scripts/web-build.xml"/>
    
    <target name="build" depends="-web-build-init">
        <!-- compile -->
        <wl-compile>
            <compile-classes>
                <include name="${web.src}/**"/>
            </compile-classes>
            
            <compile-classpath>
                <pathelement path="${web.classpath}"/>
                <pathelement location="${web.dir}/modules/dist/wonderland-modules-core.jar"/>
                
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="-declare-ant-task">
         <taskdef name="listfiles"
                  classname="org.jdesktop.wonderland.utils.ant.ListFilesTask"
                  classpath="${web.classpath}"/>

    </target>
    
    <target name="jar" depends="build">   
        <mkdir dir="${build.dir}/lib"/>
        <mkdir dir="${build.dir}/jar"/>
        
        <!-- create a jar file with the AppServer launching classes -->
        <jar destfile="${build.dir}/lib/wonderland-webserver.jar">
            <fileset dir="${build.classes.dir}">
                <include name="**"/>
                <exclude name="org/jdesktop/wonderland/webserver/launcher/**"/>
            </fileset>
        </jar>
    </target>
    
    <!-- "package" target assumes that everything in all projects has already
         been built. -->
    <target name="package" depends="-declare-ant-task" description="Package Wonderland into a jar">
        <fail message="No server.package.dir specified" unless="server.package.dir"/>
        
        <mkdir dir="${server.package.dir}"/>
        <jar destfile="${server.package.dir}/Wonderland.jar">
            <!-- classes -->
            <fileset dir="${build.classes.dir}" >
                <include name="org/jdesktop/wonderland/webserver/launcher/**"/>
            </fileset>
            
            <!-- include some utility classes at top level as well -->
            <zipfileset src="${web.dir}/utils/dist/wonderland-web-utils.jar">
                <include name="org/jdesktop/wonderland/utils/PropertyUtil*.class"/>
                <include name="org/jdesktop/wonderland/utils/RunUtil*.class"/>
                <include name="org/jdesktop/wonderland/utils/SystemPropertyUtil*.class"/>
            </zipfileset>
            
            <!-- include the default properties file -->
            <fileset file="${current.dir}/web-default.properties"/>
            <fileset file="${current.dir}/web-logging.properties"/>
            
            <!-- files that are needed for the web server classpath -->
            <zipfileset file="${web.dir}/utils/dist/wonderland-web-utils.jar" prefix="webserver"/>
            <zipfileset dir="${web.dir}/lib/glassfish" prefix="webserver"/>
            <zipfileset file="${build.dir}/lib/wonderland-webserver.jar" prefix="webserver"/>
            <zipfileset dir="${top.dir}/lib/jaxb" prefix="webserver"/>
            <zipfileset dir="${web.dir}/lib/restlib" prefix="webserver"/>
            <zipfileset dir="${web.dir}/lib/apache" prefix="webserver"/>
            <zipfileset file="${web.dir}/modules/dist/wonderland-modules-core.jar" prefix="webserver"/>
            <zipfileset file="${web.dir}/runner/dist/wonderland-runner-core.jar" prefix="webserver"/>
            
            <!-- contents of the document root -->
            <zipfileset dir="${current.dir}/web" prefix="docroot"/>
            
            <!-- wars to deploy -->
            <zipfileset dir="${top.dir}/web/wfs/dist" prefix="deploy">
                <include name="**/*.war"/>
            </zipfileset>
            <zipfileset dir="${top.dir}/web/modules/dist" prefix="deploy">
                <include name="**/*.war"/>
            </zipfileset>
            <zipfileset dir="${top.dir}/web/runner/dist" prefix="deploy">
                <include name="**/*.war"/>
            </zipfileset>
            <zipfileset dir="${top.dir}/web/front/dist" prefix="deploy">
                <include name="**/*.war"/>
            </zipfileset>
            
            <!-- modules -->
            <zipfileset dir="${top.dir}/modules/dist" prefix="modules"/>
            
            <!-- include any generated META-INF.  These will be updated
                 below if they are out of date. -->
            <fileset dir="${build.dir}/jar"/>
            
            <manifest>
                <attribute name="Main-Class" value="org.jdesktop.wonderland.webserver.launcher.WebServerLauncher"/>
            </manifest>
        </jar>
        
        <!-- list files in the jar in the deploy and webserver category
             ant generate a file that can be added to META-INF, so we
             can read the list of jars from a resource -->
        <mkdir dir="${build.dir}/jar/META-INF"/>
        
        <listfiles jar="${server.package.dir}/Wonderland.jar" dir="deploy" 
                   output="${build.dir}/jar/META-INF/deploy.jars"/>
        <listfiles jar="${server.package.dir}/Wonderland.jar" dir="webserver" 
                   output="${build.dir}/jar/META-INF/webserver.jars"/>
        <listfiles jar="${server.package.dir}/Wonderland.jar" dir="modules" 
                   output="${build.dir}/jar/META-INF/module.jars"/>
        <listfiles jar="${server.package.dir}/Wonderland.jar" dir="docroot" 
                   output="${build.dir}/jar/META-INF/docroot.files"/>
                   
        <jar destfile="${server.package.dir}/Wonderland.jar" update="true">
            <fileset dir="${build.dir}/jar"/>
        </jar>
        
    </target>
    
    <target name="-web-server-build-modules" unless="webserver.nomodules">
        <ant dir="${top.dir}/modules" inheritall="false"/>
    </target>
    
    <target name="run" depends="-set-package-dir, package">
        <java jar="${build.dir}/lib/Wonderland.jar"/>
    </target>
    
    <target name="debug" depends="-set-package-dir, package">
        <!--nbjpdastart addressproperty="jpda.address" name="wonderland-webserver" transport="dt_socket">
            <classpath>
                <pathelement path="${build.classes.dir}"/>
                <pathelement path="${web.classpath}"/>
                <pathelement location="${web.dir}/modules/dist/wonderland-modules-core.jar"/>
            </classpath>
        </nbjpdastart-->

        <java jar="${build.dir}/lib/Wonderland.jar">
            <!--start debug-->
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8890"/>
            <!--end debug-->
        </java>
    </target>
    <target name="-set-package-dir">
        <property name="server.package.dir" value="${build.dir}/lib"/>           
    </target>
    
    <target name="clean" depends="-web-clean"/>
</project>
