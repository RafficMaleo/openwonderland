<?xml version="1.0" encoding="UTF-8"?>
<project name="testharness" default="build" basedir=".">
    
    <property name="top.dir" location="../.."/>
    <property name="current.dir" location="."/>

    <!-- Use my-build.properties to override default values in build.properties.
         You can specify an alternate build.properties override file by
         running with "ant -Dbuild.properties.file=<file>" -->
    <property name="build.properties.file" location="my.build.properties"/>
    <property file="${build.properties.file}"/>
    <property file="build.properties"/>

    <property name="project.name" value="${ant.project.name}"/>
    
    <property name="javasrc.dir" value="src/classes"/>
    
    <property name="core.lib.dir" value="${top.dir}/core/build/current/debug/lib"/>
    
    <!-- Location of test-specific JAR files -->
    <property name="test.ext.dir" value="ext"/>

    <!--Runtime Class Path for JTRunner -->
    <pathconvert property="jtr.runtime.classpath">
        <fileset dir="${test.ext.dir}/common/jtr" includes="*.jar"/>
    </pathconvert>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${build-import.dir}/ant-contrib.jar"/>
        </classpath>
    </taskdef>
    
    <import file="${build-import.dir}/build-setup.xml"/>
    
    <target name="build" depends="compile-master, jar-slave, jar-jtr-slave">
    </target>
    
    <!-- Initialization - make dirs, unpack ext stuff... -->
    <target name="init" description="Initial set-up">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
    </target>
    
    <target name="compile-common" depends="init">
        <wl-compile>
            <compile-classes>
                <include name="org/jdesktop/wonderland/testharness/common/**"/>
            </compile-classes>
            
            <compile-classpath>
                <pathelement path="${wonderland-common-compile.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-manager-common">
        <mkdir dir="${build.classes.dir}"/>
        <wl-compile>
            <compile-classes>
                <include name="org/jdesktop/wonderland/testharness/manager/common/**"/>
            </compile-classes>
            
            <compile-classpath>
                <pathelement path="${wonderland-common-compile.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-manager-ui" depends="compile-manager-common">
        <mkdir dir="${build.classes.dir}"/>
        <wl-compile>
            <compile-classes>
                <include name="org/jdesktop/wonderland/testharness/manager/ui/**"/>
            </compile-classes>
            
            <compile-classpath>
                <pathelement path="${wonderland-common-compile.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-master" depends="compile-common, compile-manager-common">
        <wl-compile>
            <compile-classes>
                <include name="org/jdesktop/wonderland/testharness/master/**"/>
            </compile-classes>
            
            <compile-classpath>
                <pathelement path="${wonderland-common-compile.classpath}"/>
                <!-- include manager common jar-->
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-slave" depends="compile-common">
        <wl-compile>
            <compile-classes>
                <include name="org/jdesktop/wonderland/testharness/slave/**"/>
            </compile-classes>
            
            <compile-classpath>
                <path location="${core.lib.dir}/wonderland-client.jar"/>
                <path location="${core.lib.dir}/wonderland-common.jar"/>
                <path location="${test.ext.dir}/common/jtr/jtr.jar"/>
		<pathelement path="${wonderland-client.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="run-master" depends="compile-master">
        <java classname="org.jdesktop.wonderland.testharness.master.MasterMain" fork="true">
            <classpath>
                <path location="${build.classes.dir}"/>
		<pathelement path="${wonderland-client.classpath}"/>  <!-- for vecmath-->
            </classpath>    
            
            <arg value="${harness.master.port}"/>
            <arg value="props/wonderland-server.properties"/>
        </java>
    </target>
    
    <target name="run-slave" depends="jar-slave">
        <java classname="org.jdesktop.wonderland.testharness.slave.SlaveMain" fork="true">
            <classpath>
                <path location="${build.lib.dir}/testharness-slave.jar"/>
                <path location="${build.lib.dir}/testharness-common.jar"/>
                <path location="${core.lib.dir}/wonderland-client.jar"/>
                <path location="${core.lib.dir}/wonderland-common.jar"/>
		<pathelement path="${wonderland-client.classpath}"/>
            </classpath>  
            
            <arg value="${harness.master.hostname}"/>
            <arg value="${harness.master.port}"/>
        </java>
    </target>

    <target name="run-jtr" depends="jar-slave">
        <echo>JTR Classpath: ${jtr.runtime.classpath}</echo>
        <java classname="jtr.test.Test" dir="./" fork="true">
            <classpath>
                <path location="${build.lib.dir}/testharness-slave.jar"/>
                <path location="${build.lib.dir}/testharness-common.jar"/>
                <path location="${core.lib.dir}/wonderland-client.jar"/>
                <path location="${core.lib.dir}/wonderland-common.jar"/>
                <path location="${test.ext.dir}/common/jtr/jtr.jar"/>
                <pathelement path="${jtr.runtime.classpath}"/>
		<pathelement path="${wonderland-client.classpath}"/>             
            </classpath>
            
            <!-- JTR standard properties -->
            <jvmarg value="-Djtr.test.Test.config=config/jtr.xml"/>
            <jvmarg value="-Dlog4j.configuration=config/log4j.xml"/>
        
            <!-- Required JVM properties for distributed testing -->
            <jvmarg value="-Djtr.remote.test.host=localhost"/>
            <jvmarg value="-Djava.security.policy=config/java.policy"/>
        
            <!-- Optional JVM useful property -->
            <jvmarg value="-Dcom.sun.management.jmxremote"/>
        </java>
    </target>

    <target name="run-manager" depends="compile-manager-ui">
        <java classname="org.jdesktop.wonderland.testharness.manager.ui.HarnessManagerUI" fork="true">
            <classpath>
                <path location="${build.classes.dir}"/>
                <path location="${core.lib.dir}/wonderland-client.jar"/>
                <path location="${core.lib.dir}/wonderland-common.jar"/>
		<pathelement path="${wonderland-client.classpath}"/>
            </classpath>    
        </java>
    </target>
    
     <target name="jar-common" depends="compile-common" 
            description="Build common jar">
       <jar compress="${jar.compress}" jarfile="${build.lib.dir}/testharness-common.jar">    
            <fileset dir="${build.classes.dir}/">
                <include name="org/jdesktop/wonderland/testharness/common/**"/>
            </fileset>
         </jar>
    </target>
    
     <target name="jar-slave" depends="jar-common, compile-slave" 
            description="Build common jar">
       <jar compress="${jar.compress}" jarfile="${build.lib.dir}/testharness-slave.jar">    
            <fileset dir="${build.classes.dir}/">
                <include name="org/jdesktop/wonderland/testharness/slave/**"/>
            </fileset>
         </jar>
    </target>
    
    <!-- Packages up files that we need to drop onto the JTR save machines -->
    <target name="jar-jtr-slave" depends="jar-common, compile-slave" description="Build JTR Slave jar">
        <jar compress="${jar.compress}" jarfile="${build.lib.dir}/jtr-slave-dummy.jar">
            <fileset dir="${build.classes.dir}/">
                <include name="org/jdesktop/wonderland/testharness/slave/jtr/dummy/**"/>
            </fileset>
        </jar>
    </target>

    <target name="clean" description="Clean the build">
        <delete dir="${build.platform.dir}"/>
        <delete dir="${release.dir}"/>
        <delete dir="$(release.javadoc.dir)"/>
    </target>
</project>
