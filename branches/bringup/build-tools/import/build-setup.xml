<project basedir="." default="..." name="build-setup">
    <dirname property="imported.basedir" file="${ant.file.build-setup}"/>

    <tstamp>
	<format property="build.stamp" pattern="yyMMddHHmm"/>
	<format property="build.date" pattern="kk:mm zzz dd MMM yyyy"/>
	<format property="build.stamp.pkg" pattern="yyyyMMdd"/>
	<format property="build.stamp.pkg-copy" pattern="yyyy-MM-dd"/>
    </tstamp>

    <!-- Do platform specific setup -->
    <import file="${imported.basedir}/platform-setup.xml"/>

    <!-- lg3d-core ext dir -->
    <available property="core.exists" file="${core.dir}"/>
    <property name="core.ext.dir" location="${core.dir}/ext"/>
    <if>
	<istrue value="${core.exists}"/>
	<then>
	    <!-- lg3d-core ext and incubator jars -->
	    <fileset dir="${core.ext.dir}" id="core.ext.jars">
		<include name="**/*.jar"/>
		<exclude name="odejava.jar"/>
		<exclude name="nwn-0.7.jar"/>
	    </fileset>
	    <pathconvert property="core.ext.classpath" refid="core.ext.jars" />
	</then>
    </if>

    <!-- 
	To better support daily builds on multiple architectures and OS'es
	the platformBuild flag will cause the build files to go into platform
	specific directories. This is not used in the general case as IDE's
	can't deal with architecture info in the classpath etc
    -->
    <property name="build.platform" value="${ostype}-${arch}"/>
    <condition property="build.location"
	       value="${build.platform}/${build.level}"
	       else="current/${build.level}">
	<istrue value="${platformBuild}"/>
    </condition>
    <property name="build.platform.dir" value="${build.dir}/${build.location}"/>
    <property name="build.classes.dir" location="${build.platform.dir}/classes"/>
    <property name="build.lib.dir" location="${build.platform.dir}/lib"/>
    <property name="build.log.file" location="${build.platform.dir}/build-log.txt"/>

    <propertycopy name="build.debuglevel" from="build.debuglevel.${build.level}"/>

    <!-- Release related defines -->
    <property name="release.dir" location="${current.dir}/release/${build.platform}/${build.level}"/>
    <property name="release.pkgname" value="lg3d-wonderland"/>
    <property name="release.platform.dir" location="${release.dir}/${release.pkgname}"/>
    <property name="release.platform.lib" location="${release.platform.dir}/lib"/>
    <property name="release.platform.bin" location="${release.platform.dir}/bin"/>
    <property name="release.platform.ext" location="${release.platform.dir}/ext"/>
    <property name="release.platform.docs" location="${release.platform.dir}/docs"/>
    <property name="release.platform.javadoc" location="${release.platform.docs}/javadoc"/>
    <property name="release.javadoc.dir" location="${release.dir}/javadoc"/>

    <property name="release.pkg.dir" location="${release.dir}/pkg"/>
    <property name="release.pkg.suffix" value="${build.version}-${build.platform}-${build.stamp.pkg}"/>

    <condition property="release.pkg.voicename"
	       value="+voice"
	        else="">
	<istrue value="${voicebridge.enabled}"/>
    </condition>
    <condition property="release.pkg.artname"
	       value="+art"
	        else="">
	<istrue value="${wonderland.useLocalArt}"/>
    </condition>
    <property name="release.pkg.basename" value="${release.pkgname}${release.pkg.voicename}${release.pkg.artname}-${release.pkg.suffix}"/>
    <property name="release.pkg.filename" location="${release.pkg.dir}/${release.pkg.basename}"/>

    <property name="javaext.dir" location="${wonderland.dir}/ext"/>
    <property name="os.javaext.dir" location="${javaext.dir}/${ostype}"/>

    <property name="zip.javaext.dir" location="${javaext.dir}/zip"/>
    <property name="os.zip.javaext.dir" location="${zip.javaext.dir}/${ostype}"/>

    <!-- Platform specific libs/jars -->
    <property name="native.javaext.dir" location="${os.javaext.dir}/native"/>
    <property name="jars.javaext.dir" location="${os.javaext.dir}/jars"/>

    <!-- Platform independant jars -->
    <property name="common.javaext.dir" location="${javaext.dir}/common"/>

    <property name="sgs.javaext.dir" location="${javaext.dir}/sgs/darkstar"/>
    <property name="sgs.lib.dir" location="${sgs.javaext.dir}/lib"/>

    <property name="wonderland.bin.dir" location="${os.javaext.dir}/bin"/>
    <property name="wonderland.xvfb.dir" location="${wonderland.bin.dir}"/>

    <!-- Jars needed to use Java3d-->
    <pathconvert property="j3d.classpath">
	<path location="${jars.javaext.dir}/j3dcore.jar"/>
	<path location="${jars.javaext.dir}/j3dutils.jar"/>
	<path location="${jars.javaext.dir}/vecmath.jar"/>
	<path location="${common.javaext.dir}/j3d-contrib-utils.jar"/>
    </pathconvert>

    <!-- All other jars in the ext dir -->
    <pathconvert property="javaext.classpath">
	<path location="${os.javaext.dir}"/>
	<path location="${jars.javaext.dir}"/>

	<!-- Escher -->
	<path location="${jars.javaext.dir}/escher-0.2.2.lg.jar"/>

	<!-- JMF, Fobs4JMF -->
	<path location="${jars.javaext.dir}/jmf.jar"/>
	<path location="${jars.javaext.dir}/jipcam.jar"/>
	<path location="${jars.javaext.dir}/mediaplayer.jar"/>
	<path location="${jars.javaext.dir}/fobs4jmf.jar"/>

	<!-- JOAL + JOGL -->
	<path location="${jars.javaext.dir}/joal.jar"/>
	<path location="${jars.javaext.dir}/jogl.jar"/>
	<path location="${jars.javaext.dir}/gluegen-rt.jar"/>

	<!-- JAI -->
	<path location="${jars.javaext.dir}/jai_core.jar"/>
	<path location="${jars.javaext.dir}/jai_codec.jar"/>
	<path location="${jars.javaext.dir}/mlibwrapper_jai.jar"/>

	<!-- JAI-IMAGEIO -->
	<path location="${jars.javaext.dir}/jai_imageio.jar"/>
	<path location="${jars.javaext.dir}/clibwrapper_jiio.jar"/>

	<!-- JInput-->
	<path location="${jars.javaext.dir}/jinput.jar"/>

        <!-- JME -->
	<path location="${common.javaext.dir}/jme.jar"/>
	<path location="${common.javaext.dir}/jme-gamestates.jar"/>
	<path location="${common.javaext.dir}/jme-awt.jar"/>
	<path location="${common.javaext.dir}/jme-audio.jar"/>
	<path location="${common.javaext.dir}/jme-scene.jar"/>
	<path location="${common.javaext.dir}/jme-model.jar"/>
	<path location="${common.javaext.dir}/jme-collada.jar"/>
	<path location="${common.javaext.dir}/jme-xml.jar"/>
	<path location="${common.javaext.dir}/lwjgl.jar"/>

    </pathconvert>

    <property name="env.path.defvalue" value="${env.path.value}:${native.javaext.dir}:${yjp.home}/bin/${yjp.platform.dir}"/>

    <!-- Looking Glass core jars... -->
    <!--
    <pathconvert property="lg3d-core.classpath">
	<path location="${common.javaext.dir}/lg3d-core.jar"/>
	<path location="${common.javaext.dir}/lg3d-awt-toolkit.jar"/>
	<path location="${common.javaext.dir}/lg3d-demo-apps.jar"/>
    </pathconvert>
    -->
    
    <!-- Exta temporary Jars needed -->
    <pathconvert property="extras.classpath">
	<path location="libs-private/StarfireExt.jar"/>
	<path location="${j3dfly.lib.dir}/j3dfly.jar"/>
	<path location="${j3deditor.lib.dir}/j3dedit.jar"/>
	<path location="${j3deditor.lib.dir}/j3d_interposer.jar"/>
    </pathconvert>
    
    <!-- Wonderland incubator -->
    <pathconvert property="wonderland-incubator.classpath">
        <path location="../wonderland-incubator/build/lib/wonderland-incubator.jar"/>
    </pathconvert>
    
    <!-- Other wonderland specific supporting jars -->
    <pathconvert property="wonderlandext.classpath">
        <path location="${common.javaext.dir}/derby.jar"/>
        <path location="${common.javaext.dir}/commons-beanutils-core.jar"/>
        <path location="${common.javaext.dir}/commons-codec-1.3.jar"/>
        <path location="${common.javaext.dir}/commons-httpclient-3.0.1.jar"/>
        <path location="${common.javaext.dir}/commons-logging-1.1.jar"/>
        <path location="${common.javaext.dir}/swing-layout-1.0.jar"/>
        <path location="${common.javaext.dir}/TimingFramework.jar"/>
    </pathconvert>
    
    <pathconvert property="voice.classpath">
	<path location="${voicelib.dir}/${voicelib-jar}"/>
	<path location="${voicebridge.dir}/bridge_connector.jar"/>
	<path location="${voicebridge.dir}/softphone.jar"/>
        <path location="${javaext.dir}/bridgemonitor/BridgeMonitor.jar"/>
    </pathconvert>
    
    <pathconvert property="darkstar.classpath">
	<path location="${sgs.lib.dir}/sgs.jar"/>
	<path location="${sgs.lib.dir}/sgs-client.jar"/>
    </pathconvert>

    <pathconvert property="panorama.classpath">
        <path location="${panorama.dir}/distobj-client.jar"/>
        <path location="${panorama.dir}/gdcdemo-client.jar"/>
        <path location="${panorama.dir}/commons-cli-1.0.jar"/>
        <path location="${panorama.dir}/commons-codec-1.3.jar"/>
        <path location="${panorama.dir}/commons-httpclient-3.0.1.jar"/>
        <path location="${panorama.dir}/commons-logging-1.1.jar"/>
    </pathconvert>
    
    <pathconvert property="panorama.server.classpath">
        <path location="${panorama.server.dir}/distobj-server.jar"/>
        <path location="${panorama.server.dir}/gdcdemo-server.jar"/>
    </pathconvert>

    <!-- wonderland modules -->
    <condition property="use.modules">
        <and>
            <istrue value="${modules.enabled}"/>
            <available file="${modules.dir}"/>
        </and>
    </condition>
    
    <!-- wonderland modules -->
    <condition property="use.modules">
        <and>
            <istrue value="${modules.enabled}"/>
            <available file="${modules.dir}"/>
        </and>
    </condition>
    
    <!-- wonderland modules -->
    <condition property="use.modules">
        <and>
            <istrue value="${modules.enabled}"/>
            <available file="${modules.dir}"/>
        </and>
    </condition>
    
    <pathconvert property="wonderland-common-compile.classpath">
        <path path="${j3d.classpath}"/>
        <path path="${voice.classpath}"/>
	<path path="${darkstar.classpath}"/>
        <path path="${wonderland-incubator.classpath}"/>
    </pathconvert>
    
    <pathconvert property="wonderland-client-compile.classpath">
        <path path="${wonderland-common-compile.classpath}"/>
	<path path="${javaext.classpath}"/>
	<path path="${wonderlandext.classpath}"/>
	<path path="${core.ext.classpath}"/>
        <path path="${panorama.classpath}"/>
	<path location="${build.lib.dir}/bean-builder.jar"/>
	<path path="${extras.classpath}"/>
        <path location="${javaext.dir}/bridgemonitor/BridgeMonitor.jar"/>
    </pathconvert>

    <pathconvert property="wonderland-client.classpath">
	<path path="${wonderland-client-compile.classpath}"/>
	<path location="${build.lib.dir}/wonderland-client.jar"/>
	<path location="${build.lib.dir}/wonderland-utils.jar"/>
	<path location="${build.lib.dir}/wonderland-common.jar"/>
	<path location="${build.lib.dir}/bean-builder.jar"/>
        <path path="${module-client.classpath}"/>
    </pathconvert>

    <pathconvert property="wonderland-server-compile.classpath">
        <path path="${wonderland-common-compile.classpath}"/>
	<path location="${build.lib.dir}/bean-builder.jar"/>
        <path location="${common.javaext.dir}/commons-beanutils-core.jar"/>
        <path location="${common.javaext.dir}/commons-logging-1.1.jar"/>
    </pathconvert>

    <pathconvert property="wonderland-server.classpath">
	<path path="${wonderland-server-compile.classpath}"/>
        <path path="${panorama.server.classpath}"/>
	<path location="${build.lib.dir}/wonderland-server.jar"/>
	<path location="${build.lib.dir}/wonderland-common.jar"/>
	<path location="${sgs.lib.dir}/listener.jar"/>
        <path path="${module-server.classpath}"/>
    </pathconvert>

    <!-- Wonderland specific properties passed to the JVM -->
    <propertyset id="wonderland.properties">
	<propertyref name="wonderland.scripts.dir"/>
	<propertyref name="wonderland.xvfb.dir"/>
	<propertyref name="wonderland.bin.dir"/>
	<propertyref name="wonderland.data.dir"/>
	<propertyref name="wonderland.user.dir"/>
	<propertyref name="wonderland.cache.dir"/>
	<propertyref name="wonderland.derby.dir"/>
	<propertyref name="wonderland.config.system-dir"/>
	<propertyref name="wonderland.local.hostAddress"/>
	<propertyref name="wonderland.socketchannel.maxWriteQueueSizeMB"/>
	<propertyref name="wonderland.art.url.local"/>
	<propertyref name="wonderland.art.url.base"/>
	<propertyref name="wonderland.useLocalArt"/>
	<propertyref name="wonderland.rdp.hostname"/>
	<propertyref name="wonderland.rdp.user"/>
	<propertyref name="wonderland.rdp.command"/>
	<propertyref name="voicebridge.enabled"/>
	<propertyref name="worldeditor.enabled"/>
	<propertyref name="wonderland.benchmark"/>
	<propertyref name="wonderland.autostart.x.apps"/>
        <propertyref name="wonderland.wfs.root"/>
        <propertyref name="wonderland.appshare.minPort"/>
        <propertyref name="wonderland.appshare.maxPort"/>
	<propertyref name="j3d.rend"/>
	<propertyref name="sun.java2d.noddraw"/>
	<propertyref name="registrar.timeout"/>
	<propertyref name="voicelib.tunerEnabled"/>
	<propertyref name="wonderland.experimentalfeatures"/>
	<propertyref name="wonderland.developerfeatures"/>
    </propertyset>

    <!-- If building in verbose mode, echo important build properties... -->
    <if>
	<and>
	    <istrue value="${build.verbose}"/>
	    <not> <isset property="${build-setup.echoed}"/> </not>
	</and>
	<then>
	    <echo message="project-name = ${project.name}"/>
	    <echo message="ostype = ${ostype}"/>
	    <echo message="arch = ${arch}"/>
	    <echo message="build level=${build.level}, debug=${build.debug}, debuglevel=${build.debuglevel}"/>
	    <echo message="build.platform.dir = ${build.platform.dir}"/>
	    <echo message="platform-supports-x = ${platform-supports-x}"/>
	    <property name="${build-setup.echoed}" value="true"/>
	    <!-- <echo message="javaext.classpath = ${javaext.classpath}"/> -->
	</then>
    </if>

    <import file="${imported.basedir}/build-unpack.xml"/>
    <import file="${build-import.dir}/build-audio.xml"/>

    <if>
        <available file="${current.dir}/nbproject"/>
        <then>
            <echo file="${current.dir}/nbproject/nb.properties">
lg3d.ostype=${ostype}
lg3d.arch=${arch}
lg3d.system.type=${system.type}
            </echo>
        </then>
    </if>
    
    <!-- macros -->
    <!-- basic compile options -->
    <macrodef name="wl-compile">
        <element name="compile-classes"/>
        <element name="compile-classpath"/>
                
        <sequential>
            <javac  debug="${build.debug}"
                debuglevel="${build.debuglevel}"
		deprecation="${build.showdeprecation}" 
		destdir="${build.classes.dir}" 
		nowarn="true" 
		source="1.5" 
		target="1.5"
                srcdir="${javasrc.dir}">
            
                <compile-classes/>
                
                <classpath>
                    <compile-classpath/>
                </classpath>
            </javac>
        </sequential>
    </macrodef>
    
    <!-- workaround for broken services in ant 1.7 -->
    <macrodef name="wl-services">
        <attribute name="dir"/>
        <attribute name="type"/>
        <element name="providers"/>
        
        <sequential>
            <mkdir dir="@{dir}/META-INF/services"/>
            <echo file="@{dir}/META-INF/services/@{type}"><providers/></echo>
        </sequential>
    </macrodef>
</project>
