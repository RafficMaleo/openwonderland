%WEBTOPICLIST%   <!-- This creates the navigation links to :  Home | Help | Index | etc.  -->

---++ Project Wonderland v0.5: Developing a New Cell

One of the primary means to extend Project Wonderland is by developing a new kind of Cell. A Cell represents some 3D volume on the client and encapsulates some specific functionality. All of the different kinds of dynamic components in Project Wonderland are often their own custom Cell types: the SVG whiteboard, the PDF viewer, etc.

---+++ %BLUE%Tutorials for Beginners%ENDCOLOR%

Douglas Finnigan, in Singapore, put together a set of tutorials for beginners. It is perfect for those who are not necessarily familiar with 3D graphics concepts. It also introduces the basic Project Wonderland developer concepts.

   * Part 1: [[https://wonderland.dev.java.net/wiki/beginner/Wonderland_Tutorial_01.pdf][Wonderland Development, Basic Concepts]]
   * Part 2: [[https://wonderland.dev.java.net/wiki/beginner/Wonderland_Tutorial_02.pdf][Wonderland Development, Intro to Modules]]

---+++ %BLUE%Introductory Developer Tutorials%ENDCOLOR%

If you are new to Project Wonderland development and want to develop a new kind of Cell the following tutorial series takes you through all of the necessary elements. The "shape module" that you create displays a simple shape in the world by writing directly to the rendering engine (using the jMonkeyEngine API), captures mouse input from the user to change the shape of the object, and synchronize the changes across a clients.

   * Part 1: [[ProjectWonderlandDevelopingNewCell05Part1][Developing a New Cell: Creating a simple shape]]
   * Part 2: [[ProjectWonderlandDevelopingNewCell05Part2][Developing a New Cell: Capturing mouse input]]
   * Part 3: [[ProjectWonderlandDevelopingNewCell05Part3][Developing a New Cell: Applying textures to shapes]]
   * Part 4: [[ProjectWonderlandDevelopingNewCell05Part4][Developing a New Cell: Synchronizing state across clients]]

---+++ %BLUE%Advanced Developer Tutorials%ENDCOLOR%

Once you are complete with the basic and introductory tutorials, here are some more advanced tutorials developing new Cell types for Project Wonderland.

%TABLE{ tablewidth="80%" headerbg="#6b7f93" headercolor="#ffffff" tableborder="1" cellpadding="5" cellspacing="5" cellborder="0" }% 
|<a href="http://wiki.java.net/bin/view/Javadesktop/ButtonBoxTutorialPart1">Advanced 3D GUI Development</a>|This tutorial describes how to create more complex 3D scenes using the jMonkeyEngine rendering API.|
|<a href="http://wiki.java.net/bin/view/Javadesktop/ProjectWonderlandUsingDeployedModels05">Displaying 3D Models in Custom Cells</a>|This tutorial describes how to display 3D models in your custom Cell type. Project Wonderland supports 3D models using the COLLADA(TM) format.|
|<a href="http://wiki.java.net/bin/view/Javadesktop/ProjectWonderlandHandlingContent05">Handling Imported Content in Custom Cells</a>|This tutorial describes how to interact with content that has been imported into Project Wonderland. For example, the SVG whiteboard Cell has display SVG documents that have been imported via drag-and-drop.|
|<a href="http://wiki.java.net/bin/view/Javadesktop/ProjectWonderlandContextMenu05">Adding Context Menu Items</a>|This tutorial describes how to add items to the context menu that appear for your Cell. This tutorial also covers how to add context menus for all Cells.|
