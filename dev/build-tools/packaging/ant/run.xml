<?xml version="1.0" encoding="UTF-8"?>
<!-- The run.xml used to run wonderland subsystems when packaged... -->
<project basedir="." default="help" name="Project Wonderland">

    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <!-- Use my-run.properties to override default values in run.properties -->
    <property file="${user.home}/.wonderland/my.run.properties"/>
    <property file="../my.run.properties"/>
    <property file="run.properties"/>

    <!-- Do platform specific setup -->
    <import file="platform-setup.xml"/>

    <property name="env.path.defvalue" value="${env.path.value}:${wl.native.dir}"/>

    <!-- Wonderland specific properties passed to the JVM -->
    <propertyset id="wl.properties">
	<propertyref name="wonderland.config.system-dir"/>
	<propertyref name="wonderland.data.dir"/>
	<propertyref name="wonderland.user.dir"/>
	<propertyref name="wonderland.cache.dir"/>
	<propertyref name="wonderland.derby.dir"/>
	<propertyref name="wonderland.scripts.dir"/>
	<propertyref name="wonderland.xvfb.dir"/>
	<propertyref name="wonderland.bin.dir"/>
	<propertyref name="wonderland.local.hostAddress"/>
	<propertyref name="sgs.server"/>
	<propertyref name="sgs.port"/>
	<propertyref name="voicebridge.enabled"/>
        <propertyref name="wonderland.useLocalArt"/>
        <propertyref name="wonderland.art.url.local"/>
        <propertyref name="wonderland.art.url.base"/>
        <propertyref name="wonderland.wfs.root"/>
        <propertyref name="wonderland.appshare.minPort"/>
        <propertyref name="wonderland.appshare.maxPort"/>
        <propertyref name="j3d.rend"/>
        <propertyref name="sun.java2d.noddraw"/>
        <propertyref name="wonderland.rdp.hostname"/>
	<propertyref name="wonderland.rdp.user"/>
        <propertyref name="wonderland.experimentalfeatures"/>
	<propertyref name="wonderland.developerfeatures"/>
    </propertyset>

    <pathconvert property="voice.classpath">
	<path location="${wl.voicelib.dir}/${voicelib-jar}"/>
	<path location="${wl.voicebridge.dir}/bridge_connector.jar"/>
	<path location="${wl.voicebridge.dir}/softphone.jar"/>
    </pathconvert>

    <pathconvert property="sgs.classpath">
	<path location="${wl.sgs.lib.dir}/sgs.jar"/>
	<path location="${wl.sgs.lib.dir}/sgs-client.jar"/>
    </pathconvert>
  
    <target name="run-client" description="Run wonderland client (in master mode)">
  
        <pathconvert property="module-client.classpath">
            <path>
                <fileset dir="${wonderland.modules.dir}">
                    <include name="*/dist/client/*.jar"/>
                </fileset>
            </path>
        </pathconvert>
        
        <java classname="org.jdesktop.lg3d.wonderland.Main" dir="${wl.root.dir}" fork="true">
            <jvmarg value="-client"/>
            <jvmarg value="-Xmx384m"/>
            <jvmarg value="-Xincgc"/>
            <jvmarg value="-Xms32m"/>

            <jvmarg value="-Djava.util.logging.config.file=${logging-client.config.file}"/>
            <jvmarg value="-Dlg.appcodebase=file:///${lg.appcodebase}"/>
            <jvmarg value="-Dlg.maxfps=${wl.maxfps}"/>
            
            <jvmarg value="-Dj3d.cacheAutoComputeBounds=true"/>
            
	    <!-- Tell Wonderland if this client is a Master -->
            <jvmarg value="-Dwl.xapps=${wl.xapps}"/>

            <classpath>
		<pathelement path="${wl.lib.dir}/wonderland-client.jar"/>
		<pathelement path="${wl.lib.dir}/wonderland-utils.jar"/>
		<pathelement path="${sgs.classpath}"/>
		<pathelement path="${voice.classpath}"/>
                <fileset dir="${wl.jars.dir}">
                    <include name="*.jar"/>
                </fileset>
                <pathelement path="${module-client.classpath}"/>
	    </classpath>

	    <syspropertyset refid="wl.properties"/>

	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
	</java>
    </target>

    <target name="run-smc" description="Run wonderland client (in master mode)">
        <pathconvert property="module-client.classpath">
            <path>
                <fileset dir="${wonderland.modules.dir}">
                    <include name="*/dist/client/*.jar"/>
                </fileset>
            </path>
        </pathconvert>
        
        <java classname="org.jdesktop.lg3d.wonderland.Main" dir="${wl.root.dir}" fork="true">
            <jvmarg value="-client"/>
            <jvmarg value="-Xmx384m"/>
            <jvmarg value="-Xincgc"/>
            <jvmarg value="-Xms32m"/>

            <jvmarg value="-Djava.util.logging.config.file=${logging-client.config.file}"/>
            <jvmarg value="-Dlg.appcodebase=file:///${lg.appcodebase}"/>
            <jvmarg value="-Dlg.maxfps=${wl.maxfps}"/>
            
            <jvmarg value="-Dj3d.cacheAutoComputeBounds=true"/>
            
	    <!-- Tell Wonderland if this client is a Master -->
            <jvmarg value="-Dwl.xapps=true"/>
            <jvmarg value="-Dwl.serverMasterClient=true"/>
            
            <classpath>
		<pathelement path="${wl.lib.dir}/wonderland-client.jar"/>
		<pathelement path="${wl.lib.dir}/wonderland-utils.jar"/>
		<pathelement path="${sgs.classpath}"/>
		<pathelement path="${voice.classpath}"/>
                <fileset dir="${wl.jars.dir}">
                    <include name="*.jar"/>
                </fileset>
                <pathelement path="${module-client.classpath}"/>
	    </classpath>

	    <syspropertyset refid="wl.properties"/>

	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
	</java>
    </target>
    
    <target name="run-master" description="Run client in Master mode (same as run-client)">
	<fail message="Can not run client in the master mode as this platform doesnt support X apps.">
	    <condition>
		<isfalse value="${platform-supports-x}"/>
	    </condition>
	</fail>
	<antcall target="run-client"/>
    </target>

    <target name="run-slave" description="Run client in Slave mode (can not run X apps)">
	<antcall target="run-client">
	    <param name="wl.xapps" value="false"/>
	</antcall>
    </target>
    
    <target name="run-server" description="Run Sun Game Server for Project Wonderland">
        <delete dir="${wl.sgs.db.dir}" failonerror="false"/>
        <mkdir dir="${wl.sgs.db.dir}"/>
        
        <pathconvert property="module-server.classpath">
            <path>
                <fileset dir="${wonderland.modules.dir}">
                    <include name="*/dist/server/*.jar"/>
                </fileset>
            </path>
        </pathconvert>
        
        <copy file="${wonderland.config.system-dir}/WonderlandMain.cfg" todir="${wl.sgs.dir}/" overwrite="true">
            <filterset>
                <filter token="SGS_ROOT_DIR" value="${wl.sgs.root.dir}"/>
                <filter token="SGS_PORT" value="${sgs.port}"/>
                <filter token="VOICE_ENABLED" value="${voicelib-filter}"/>
            </filterset>            
        </copy>
        
        <java classname="com.sun.sgs.impl.kernel.Kernel" dir="${wl.root.dir}" fork="true">
            <jvmarg value="-Djava.library.path=${wl.sgs.dir}/lib/bdb/${sgs.platform.lib}"/>
            <jvmarg value="-Djava.util.logging.config.file=${logging-server.config.file}"/>
            <jvmarg value="-Dcom.sun.sgs.config.file=${wl.sgs.dir}/sgs-config.properties"/>

            <arg value="${wl.sgs.dir}/WonderlandMain.cfg"/>

            <classpath>
		<pathelement path="${sgs.classpath}"/>
		<pathelement path="${voice.classpath}"/>
                <fileset dir="${wl.jars.dir}">
                    <include name="j3d*.jar"/>
                    <include name="vecmath.jar"/>
                    <include name="lg3d*.jar"/>
                </fileset>
		<pathelement path="${wl.lib.dir}/wonderland-server.jar"/>
                <pathelement path="${module-server.classpath}"/>
	    </classpath>

	    <syspropertyset refid="wl.properties"/>

	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
        </java>
    </target>

    <target name="stop-bridge" description="Shutdown Voice/Conference Bridge">
        <java classname="com.sun.voip.server.ShutdownBridge" failonerror="true" dir="${wl.root.dir}" fork="true">
            <classpath>
                <pathelement location="${wl.voicebridge.dir}/bridge.jar"/>
            </classpath>
        </java>
    </target>

    <target name="run-bridge" depends="stop-bridge" description="Start Voice/Conference Bridge">
	<fail message="Can not run voice bridge since it has not been enabled">
	    <condition>
		<isfalse value="${voicebridge.enabled}"/>
	    </condition>
	</fail>
        <java classname="com.sun.voip.server.Bridge" failonerror="true" dir="${wl.root.dir}" fork="true">
            <jvmarg value="${voice.vm}"/>
	    <!--  see the documentation of gov.nist.jain.protocol.ip.sip.SipStackImpl for
		  explanations and other configuration switches. 
	     -->
	    <jvmarg value="-Dgov.nist.jainsip.stack.disableAuthentication=true"/>
	    <jvmarg value="-Dgov.nist.jainsip.stack.traceLevel=8"/>
	    <jvmarg value="-Dgov.nist.javax.sip.SERVER_LOG=sipMessages.log"/>
	    <jvmarg value="-Dgov.nist.javax.sip.DEBUG_LOG=nistStack.log"/>
 	    <jvmarg value="-Dgov.nist.jainsip.stack.enableUDP=${voicebridge.sip.port}"/>
	    <jvmarg value="-Dcom.sun.voip.server.BRIDGE_LOG=bridge.log"/>
	    <jvmarg value="-Dcom.sun.voip.server.BRIDGE_LOCATION=LOC"/>
	    <jvmarg value="-Dcom.sun.voip.server.MODULES_PATH=bridgeModules"/>
	    <jvmarg value="-Dcom.sun.voip.server.LOCALHOST_SECURITY=false"/>
            <jvmarg value="-Dcom.sun.voip.server.Bridge.serverPort=6666"/>
            <jvmarg value="-Dcom.sun.voip.server.Bridge.soundPath=/com/sun/voip/server/sounds:."/>
            <jvmarg value="-Dcom.sun.voip.server.BRIDGE_CONTROL_PORT=${voicebridge.control.port}"/>
            <jvmarg value="-Dcom.sun.voip.server.PUBLIC_IP_ADDRESS=${voicebridge.server.public.address}"/>
            <jvmarg value="-Dcom.sun.voip.server.BRIDGE_PUBLIC_CONTROL_PORT=${voicebridge.server.public.control.port}"/>
            <jvmarg value="-Dcom.sun.voip.server.PUBLIC_SIP_PORT=${voicebridge.server.public.sip.port}"/>
            <jvmarg value="-Dcom.sun.voip.server.FIRST_RTP_PORT=${voicebridge.first.rtp.port}"/>
            <jvmarg value="-Dcom.sun.voip.server.LAST_RTP_PORT=${voicebridge.last.rtp.port}"/>
            <jvmarg value="-Dcom.sun.voip.server.BRIDGE_STATUS_LISTENERS=${sgs.server}:6668"/>
	    <jvmarg value="-Djavax.sip.IP_ADDRESS=${wonderland.local.hostAddress}"/>
            <jvmarg value="-ms200m"/>
            <jvmarg value="-mx200m"/>
	    <jvmarg value="-XX:NewSize=10m"/>
            <jvmarg value="-XX:MaxNewSize=10m"/> 
            <jvmarg value="-XX:+UseParNewGC"/> 
            <jvmarg value="-XX:+UseConcMarkSweepGC"/> 
            <jvmarg value="-XX:+TraceGen0Time"/>
            <jvmarg value="-XX:+TraceGen1Time"/>

            <arg value="noprogram"/>
	    <classpath>
                <pathelement location="${wl.voicebridge.dir}/bridge.jar"/>
                <pathelement location="${wl.voicebridge.dir}/codecLib_dtmf.jar"/>
                <pathelement location="${wl.voicebridge.dir}/codecLibwrapper_dtmf.jar"/>
        	<pathelement location="${wl.voicebridge.dir}/jspeex.jar"/>
        	<pathelement location="${wl.voicebridge.dir}/log4j-1.2.8.jar"/>
                <pathelement location="${wl.voicebridge.dir}/nist-sip/JainSipRi1.2.jar"/>
                <pathelement location="${wl.voicebridge.dir}/nist-sip/JainSipApi1.2.jar"/>
                <pathelement location="${wl.voicebridge.dir}/nist-sip/concurrent.jar"/>
                <pathelement location="${wl.voicebridge.dir}/voip.jar"/>
	    </classpath>
        </java>
    </target>

    <target name="run-softphone" description="Run Software Phone">
        <java classname="com.sun.mc.softphone.SipCommunicator" failonerror="true" dir="${wl.root.dir}" fork="true">
            <jvmarg value="${voice.vm}"/>
            <jvmarg value="-ms200m"/>
            <jvmarg value="-mx200m"/>
	    <jvmarg value="-XX:NewSize=5m"/>
            <jvmarg value="-XX:MaxNewSize=5m"/> 
            <jvmarg value="-XX:+UseParNewGC"/> 
            <jvmarg value="-XX:+UseConcMarkSweepGC"/> 

           <classpath>
                <pathelement location="${wl.voicebridge.dir}/softphone.jar"/>
            </classpath>
        </java>
    </target>

    <target name="help" description="Print help/usage">
	<property name="run.xml" location="${ant.home}/run.xml"/>
	<java classname="org.apache.tools.ant.Main">
	    <arg line="-f ${run.xml} -q -projecthelp"/>
	</java>
    </target>

</project>
