<project basedir="." default="..." name="wonderland.run-jmf">
    <dirname property="imported.basedir" file="${ant.file.build-setup}"/>

    <target name="run-jmf-studio" depends="init" description="Run JMStudio (JMF)">
        <java classname="JMStudio" fork="true">
	    <jvmarg value="-Xms32m"/>
	    <jvmarg value="-Xmx384m"/>
	    <jvmarg value="-XX:PermSize=32m"/>
	    <jvmarg value="-XX:MaxPermSize=160m"/>
	    <jvmarg value="-Xverify:none"/>
	    <jvmarg value="-XX:+UseConcMarkSweepGC"/>
	    <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
	    <jvmarg value="-XX:+CMSPermGenSweepingEnabled"/>
            <classpath>
		<pathelement path="${j3d.classpath}"/>
		<pathelement path="${javaext.classpath}"/>
	    </classpath>
	    <!-- <arg value="file:/export/home/kkg/ws/java.net/jmf/movies/mpeg/bear_small.mpg"/> -->
	    <!-- <arg value="file:/export/home/kkg/ws/java.net/jmf/movies/star-wreck-in-the-pirkinning/star_wreck_in_the_pirkinning_subtitled_xvid.avi"/> -->
	    <!-- <arg value="file:///usr/share/sounds/startup.wav"/> -->
	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
	</java>
    </target>
    
    <target name="run-jmf-init" depends="init" description="Run JMFInit (JMF)">
	<echo message="${env.path.defvalue}"/>
	<echo message="${javaext.classpath}"/>
        <java classname="JMFInit" fork="true">
            <classpath>
		<pathelement path="${javaext.classpath}"/>
	    </classpath>
	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
	</java>
    </target>
    
    <target name="run-jmtest" depends="jar" description="Run JMFRendererTest">
        <java classname="org.jdesktop.lg3d.media.jmf.JMFRendererTest" fork="true">
	    <jvmarg value="-Xmx256m"/>
            <classpath>
		<pathelement path="${wonderland-client.classpath}"/>
	    </classpath>
	    <arg value="file:/export/home/kkg/ws/java.net/jmf/movies/mpeg/bear_small.mpg"/>
	    <!-- <arg value="file:C:/cygwin/home/krishnag/ws/java.net/joal/joal-demos/src/java/demos/data/broken_glass.ogg"/> -->
	    <env key="${env.path.name}" path="${env.path.defvalue}"/>
	</java>
    </target>
</project>
