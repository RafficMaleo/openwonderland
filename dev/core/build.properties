e---------------------------------------------------------------------
# Wonderland directories
#
# The build.xml should have the following lines before including this property file
#   <property name="top.dir" location=".."/>
#   <property name="current.dir" location="."/>
#---------------------------------------------------------------------
wonderland.dir=${current.dir}
wonderland.art.dir=${top.dir}/lg3d-wonderland-art
wonderland.lib.dir=${top.dir}/lib
wonderland.tools.dir=${top.dir}/tools
#
wonderland.data.root=data/Wonderland
wonderland.data.dir=${wonderland.dir}/${wonderland.data.root}
wonderland.user.dir=${user.home}/.wonderland-new
wonderland.cache.dir=${wonderland.user.dir}/cache
wonderland.derby.dir=${wonderland.cache.dir}/asset_db
wonderland.scripts.dir=${wonderland.dir}/src/scripts
#---------------------------------------------------------------------
# Build related properties...
#---------------------------------------------------------------------
build-tools.dir=${top.dir}/build-tools
build-import.dir=${build-tools.dir}/import
build-bin.dir=${build-tools.dir}/bin
build-packaging.dir=${build-tools.dir}/packaging
build-dpkg.dir=${build-tools.dir}/dpkg
build-solpkg.dir=${build-tools.dir}/solpkg
build-nsis.dir=${build-tools.dir}/nsis
build-macpkg.dir=${build-tools.dir}/macpkg
build-webstart.dir=${build-tools.dir}/webstart

#
build.version=0-5-0-daily
build.dir=${current.dir}/build
# build.debug must be either true or false
build.debug=true
# build.level must be either debug or opt
build.level=debug
build.debuglevel.debug=lines,vars,source
build.debuglevel.opt=lines,source
#
build.type=user
build.showdeprecation=true
build.verbose=true
#
jar.compress=false
#
makensis.path="C:\\Program Files\\NSIS\\makensis.exe"

#
# modules
#
modules.enabled=true
modules.dir=${wonderland.dir}/modules

#
# JMF
#
jmf.enabled=false

#---------------------------------------------------------------------
# Java Web Start building
#---------------------------------------------------------------------
# replace with a path to a keystore
wonderland.keystore=${build-webstart.dir}/wonderlandKeystore.jks
wonderland.keystore.alias=wonderlandSig
wonderland.keystore.password=wonderland

# fill in the path to the server where the JNLP files are available
jnlp.codebase=

#---------------------------------------------------------------------
# lg3d-wonderland directory locations
#---------------------------------------------------------------------
src.dir=${current.dir}/src
javaext.dir=${top.dir}/core/ext
javasrc.dir=${src.dir}/classes
#
#
sgs.server=127.0.0.1
sgs.root.dir=${wonderland.data.root}
sgs.db.dir=${wonderland.data.dir}/dsdb
sgs.config.src.dir=${src.dir}/darkstar_config
sgs.server=localhost
sgs.port=1139
sgs.test.port=1140
#
#---------------------------------------------------------------------
# Wonderland voice/audio configuration
#---------------------------------------------------------------------
#
# VoiceLib (VoiceManager and VoiceService)
voicelib.javaext.dir=${javaext.dir}/voicelib
voicelib.dir=${voicelib.javaext.dir}
voicelib.conference=Test:PCM/16000/2

#
# VoiceBridge
voicebridge.javaext.dir=${javaext.dir}/voicebridge
voicebridge.dir=${voicebridge.javaext.dir}
voicebridge.control.port=6666
voicebridge.sip.port=5060
voicebridge.server.public.address=${wonderland.public.hostname}
voicebridge.server.public.control.port=${voicebridge.control.port}
voicebridge.server.public.sip.port=${voicebridge.sip.port}
voicebridge.first.rtp.port=0
voicebridge.last.rtp.port=0

# Voice Service
voiceservice.watchdog.timeout=0
voiceservice.bridge.ping.timeout=0

# Softphone
registrar.timeout=0

#
# VoiceBridge CallStatus
voicecallstatus.javaext.dir=${javaext.dir}/voicecallstatus
voicecallstatus.dir=${voicecallstatus.javaext.dir}
#
# Set this in my.build.properties to download the audio jars and audio data files.
#
#voicebridge.audio.url=http://labeast.east.sun.com/mc
voicebridge.audio.url=http://192.18.37.42
#
# Where to put the downloaded audio files
voicebridge.audio.dir=${wonderland.dir}/audio/mpk20
#
# Voice bridge support 
voicebridge.enabled=true
#---------------------------------------------------------------------
# Wonderland system configuration
#---------------------------------------------------------------------
wonderland.config.system-dir=${src.dir}/config
wonderland.art.url.local=file:${wonderland.art.dir}/compiled_models
wonderland.art.url.base=http://192.18.37.42/trunk/lg3d-wonderland-art/compiled_models
wonderland.useLocalArt=false

wonderland.experimentalfeatures=false
wonderland.developerfeatures=false

#
# Set the root of the Wonderland file system.  This is where the default
# world is loaded from.
#
#wonderland.wfs.root=file:${src.dir}/worlds/default-wfs
wonderland.server.wfs.url=http://localhost:8080/wonderland-web-wfs/wfs

#
# Set the hostname to be used for outbound socket connections.
# Java finds it hard to figure this out automatically. This is used by the voice bridge
# and the X app sharing s/w for making outbound socket connections.
#
wonderland.public.hostname=localhost
wonderland.local.hostAddress=
#
# SocketChannel configuration
#
wonderland.socketchannel.maxWriteQueueSizeMB=0
#
# The defaults for the RDP X client (rdesktop)
#
# If the following is set, then it is used as the ENTIRE command line for launching
# the Rdesktop terminal.
#
wonderland.rdp.command=
#
# Otherwise, the "/usr/bin/rdesktop" client is used with the following command line
# options.
wonderland.rdp.hostname=129.145.161.184
wonderland.rdp.user=wonderland

sun.java2d.noddraw=true
