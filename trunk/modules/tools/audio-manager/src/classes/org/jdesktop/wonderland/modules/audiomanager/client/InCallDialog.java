/*
 * InCallDialog.java
 *
 * Created on April 20, 2009, 2:19 PM
 */

package org.jdesktop.wonderland.modules.audiomanager.client;

import org.jdesktop.wonderland.client.ClientContext;

import org.jdesktop.wonderland.client.cell.Cell;
import org.jdesktop.wonderland.client.cell.CellCache;

import org.jdesktop.wonderland.common.auth.WonderlandIdentity;

import org.jdesktop.wonderland.common.cell.CellID;

import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatBusyMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatInfoRequestMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatJoinMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatJoinAcceptedMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatLeaveMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatMessage.ChatType;

import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManager;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerFactory;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerListener;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerListener.ChangeType;
import org.jdesktop.wonderland.modules.presencemanager.common.PresenceInfo;

import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.NameTag;
import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.NameTag.EventType;

import org.jdesktop.wonderland.client.comms.WonderlandSession;

import java.io.IOException;

import java.util.ArrayList;

import java.util.concurrent.ConcurrentHashMap;

import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import java.awt.Point;

/**
 *
 * @author  jp
 */
public class InCallDialog extends javax.swing.JFrame implements PresenceManagerListener {

    private static final Logger logger =
        Logger.getLogger(InCallDialog.class.getName());

    private ChatType chatType = ChatType.PRIVATE;

    private AudioManagerClient client;
    private WonderlandSession session;
    private CellID cellID;

    private String group;

    private PresenceManager pm;

    private PresenceInfo presenceInfo;

    /** Creates new form InCallDialog */
    public InCallDialog() {
        initComponents();
    }

    public InCallDialog(AudioManagerClient client, WonderlandSession session, 
	    CellID cellID, String group) {

        this.client = client;
        this.session = session;
	this.cellID = cellID;
	this.group = group;
	
	initComponents();

        pm = PresenceManagerFactory.getPresenceManager(session);

        pm.addPresenceManagerListener(this);

	presenceInfo = pm.getPresenceInfo(cellID);

	buddyList.setListData(new String[0]);

	client.addInCallDialog(group, this);
	session.send(client, new VoiceChatInfoRequestMessage(group));

	setVisible(true);
    }

    public void presenceInfoChanged(PresenceInfo presenceInfo, ChangeType type) {
    }

    public void aliasChanged(String previousAlias, PresenceInfo presenceInfo) {
    }

    private ArrayList<String> members = new ArrayList();

    public void setMembers(PresenceInfo[] chatters) {
	members = new ArrayList();

	synchronized (members) {
	    for (int i = 0; i < chatters.length; i++) {
	        members.add(chatters[i].usernameAlias);
	    }

	    buddyList.setListData(members.toArray(new String[0]));
	}
    }

    public void addMember(PresenceInfo member) {
	synchronized (members) {
	    if (members.contains(member.usernameAlias)) {
	        return;
	    }

	    members.add(member.usernameAlias);
	    buddyList.setListData(members.toArray(new String[0]));
	}
    }
    
    public void removeMember(PresenceInfo member) {
	synchronized (members) {
	    members.remove(member.usernameAlias);
	    buddyList.setListData(members.toArray(new String[0]));
	}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        buddyList = new javax.swing.JList();
        keyPadButton = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();
        holdButton = new javax.swing.JButton();
        endCallButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 15));
        jLabel1.setText("In Call");

        buddyList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(buddyList);

        keyPadButton.setText("KeyPad");
        keyPadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyPadButtonActionPerformed(evt);
            }
        });

        addUserButton.setText("Add User...");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        holdButton.setText("Hold");
        holdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdButtonActionPerformed(evt);
            }
        });

        endCallButton.setText("End Call");
        endCallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endCallButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(holdButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(keyPadButton, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(endCallButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(addUserButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(keyPadButton)
                    .addComponent(addUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holdButton)
                    .addComponent(endCallButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private KeypadDialog keypad;

private void keyPadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyPadButtonActionPerformed
    if (keypad == null) {
	keypad = new KeypadDialog(this);
    }

    keypad.setLocation(new Point((int) getLocation().getX() + getWidth(), (int) getLocation().getY()));
    keypad.setVisible(true);
}//GEN-LAST:event_keyPadButtonActionPerformed

public void keypadPressed(char key) {
}

private AddUserDialog addUserDialog;

private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
    if (addUserDialog == null) {
	addUserDialog = new AddUserDialog(client, session, cellID, group, members);

	addUserDialog.setLocation(new Point((int) getLocation().getX() + getWidth(), (int) getLocation().getY()));
    }

    addUserDialog.setVisible(true);
}//GEN-LAST:event_addUserButtonActionPerformed

private void holdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdButtonActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_holdButtonActionPerformed

private void endCallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endCallButtonActionPerformed
    client.removeInCallDialog(group);
    session.send(client, new VoiceChatLeaveMessage(group, presenceInfo));

    if (addUserDialog != null) {
	addUserDialog.setVisible(false);
    }

    if (keypad != null) {
	keypad.setVisible(false);
    }

    setVisible(false);
}//GEN-LAST:event_endCallButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InCallDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserButton;
    private javax.swing.JList buddyList;
    private javax.swing.JButton endCallButton;
    private javax.swing.JButton holdButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keyPadButton;
    // End of variables declaration//GEN-END:variables

}
