/*
 * PlaceCallDialog.java
 *
 * Created on April 20, 2009, 11:47 AM
 */

package org.jdesktop.wonderland.modules.audiomanager.client;

import org.jdesktop.wonderland.client.ClientContext;

import org.jdesktop.wonderland.client.cell.Cell;
import org.jdesktop.wonderland.client.cell.CellCache;

import org.jdesktop.wonderland.common.auth.WonderlandIdentity;

import org.jdesktop.wonderland.common.cell.CellID;

import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatBusyMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatInfoRequestMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatJoinMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatJoinAcceptedMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatLeaveMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.VoiceChatMessage.ChatType;

import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManager;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerFactory;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerListener;
import org.jdesktop.wonderland.modules.presencemanager.client.PresenceManagerListener.ChangeType;
import org.jdesktop.wonderland.modules.presencemanager.common.PresenceInfo;

import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.NameTag;
import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.NameTag.EventType;

import org.jdesktop.wonderland.client.comms.WonderlandSession;

import java.io.IOException;

import java.util.ArrayList;

import java.util.concurrent.ConcurrentHashMap;

import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import java.awt.Point;

/**
 *
 * @author  jp
 */
public class PlaceCallDialog extends javax.swing.JFrame implements PresenceManagerListener {

    private static final Logger logger =
        Logger.getLogger(PlaceCallDialog.class.getName());

    private ChatType chatType = ChatType.PRIVATE;

    private AudioManagerClient client;
    private WonderlandSession session;

    private CellID cellID;

    private PresenceInfo caller;

    private PresenceManager pm;

    private int chatGroupNumber;

    /** Creates new form PlaceCallDialog */
    public PlaceCallDialog() {
        initComponents();
    }

    public PlaceCallDialog(AudioManagerClient client, WonderlandSession session, 
	    CellID cellID, PresenceInfo caller) throws IOException {

        this.client = client;
        this.cellID = cellID;
        this.session = session;
        this.caller = caller;

        initComponents();

        pm = PresenceManagerFactory.getPresenceManager(session);

        pm.addPresenceManagerListener(this);

        setVisible(true);
    }

    public void presenceInfoChanged(PresenceInfo presenceInfo, ChangeType type) {
        setBuddyList();
    }

    public void aliasChanged(String previousAlias, PresenceInfo presenceInfo) {
        setBuddyList();
    }

    private void setBuddyList() {
        PresenceInfo[] presenceInfoList = pm.getAllUsers();

        ArrayList<String> userData = new ArrayList();

        for (int i = 0; i < presenceInfoList.length; i++) {
            PresenceInfo info = presenceInfoList[i];

            if (info.callID == null) {
                // It's a virtual player, skip it.
                continue;
            }

            PresenceInfo ourInfo = pm.getPresenceInfo(cellID);

            if (info.callID.equals(ourInfo.callID)) {
                // It's us, skip it.
                continue;
            }

            userData.add(NameTag.getDisplayName(info.usernameAlias,
                info.isSpeaking, info.isMuted));
        }

        buddyList.setListData(userData.toArray(new String[0]));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        secretRadioButton = new javax.swing.JRadioButton();
        privateRadioButton = new javax.swing.JRadioButton();
        publicRadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        phoneNumberText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        placeCallButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        buddyList = new javax.swing.JList();

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 15));
        jLabel1.setText("Place Call");

        jLabel2.setText("Privacy:");

        buttonGroup1.add(secretRadioButton);
        secretRadioButton.setText("Secret");

        buttonGroup1.add(privateRadioButton);
        privateRadioButton.setSelected(true);
        privateRadioButton.setText("Private");

        buttonGroup1.add(publicRadioButton);
        publicRadioButton.setText("Public");

        jLabel3.setText("Phone Number:");

        jLabel4.setText("Buddies:");

        placeCallButton.setText("Place Call");
        placeCallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeCallButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buddyList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(buddyList);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel3)
                                .add(18, 18, 18)
                                .add(phoneNumberText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(secretRadioButton)
                                        .add(18, 18, 18)
                                        .add(privateRadioButton)))
                                .add(18, 18, 18)
                                .add(publicRadioButton))
                            .add(layout.createSequentialGroup()
                                .add(jLabel4)
                                .add(18, 18, 18)
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(25, 25, 25)
                        .add(placeCallButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 108, Short.MAX_VALUE)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(secretRadioButton)
                    .add(privateRadioButton)
                    .add(publicRadioButton))
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(phoneNumberText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(34, 34, 34)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(placeCallButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed

private void placeCallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeCallButtonActionPerformed
    String chatGroup = caller.userID.getUsername() + "-" + chatGroupNumber++;

    String chatters = "";

    Object[] selectedValues = buddyList.getSelectedValues();

    for (int i = 0; i < selectedValues.length; i++) {
	if (i > 0) {
	    chatters += " ";
	}

	chatters += NameTag.getUsername((String) selectedValues[i]);
    }

    String callerString = caller.usernameAlias;

    chatters = chatters.replaceAll(" " + callerString, "");
    chatters = chatters.replaceAll(callerString + " ", "");
    chatters = chatters.replaceAll(callerString, "");

    logger.info("JOIN chatGroup " + chatGroup + " caller " + caller
	+ " chatters " + chatters + " chatType " + chatType);

    PresenceInfo[] chattersInfo = new PresenceInfo[0];

    if (chatters.length() > 0) {
	chattersInfo = getPresenceInfo(chatters);
    }

    InCallDialog inCallDialog = new InCallDialog(client, session, cellID, chatGroup);

    inCallDialog.setLocation(new Point((int) getLocation().getX() + getWidth(), (int) getLocation().getY()));

    session.send(client, new VoiceChatJoinMessage(chatGroup, caller, chattersInfo, chatType));

    logger.info("Sent join message, about to enable leave button");
}//GEN-LAST:event_placeCallButtonActionPerformed

private PresenceInfo[] getPresenceInfo(String users) {
    String[] tokens = users.split(" ");

    PresenceInfo[] info = new PresenceInfo[tokens.length];

    for (int i = 0; i < tokens.length; i++) {
	PresenceInfo[] userInfo = pm.getUserPresenceInfo(tokens[i]);

	if (userInfo == null) {
	    logger.warning("No PresenceInfo for " + tokens[i]);
	    return null;
	}

	info[i] = userInfo[0];

	checkLength(userInfo);
    }

    return info;
}

private void checkLength(PresenceInfo[] info) {
    if (info.length > 1) {
        logger.info("More than one PresenceInfo, using first:");

        for (int i = 0; i < info.length; i++) {
            logger.info("  " + info[i]);
        }
    }
}

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlaceCallDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList buddyList;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField phoneNumberText;
    private javax.swing.JButton placeCallButton;
    private javax.swing.JRadioButton privateRadioButton;
    private javax.swing.JRadioButton publicRadioButton;
    private javax.swing.JRadioButton secretRadioButton;
    // End of variables declaration//GEN-END:variables

}
