/**
 * Project Wonderland
 *
 * Copyright (c) 2004-2009, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * Sun designates this particular file as subject to the "Classpath" 
 * exception as provided by Sun in the License file that accompanied 
 * this code.
 */
package org.jdesktop.wonderland.modules.audiomanager.client;

import java.io.IOException;

import java.util.logging.Logger;

/**
 *
 * @author  jp
 */
public class CallMigrationForm extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(CallMigrationForm.class.getName());
    private static CallMigrationForm callMigrationForm;

    private AudioManagerClient client;

    public static CallMigrationForm getInstance() {
        if (callMigrationForm == null) {
            callMigrationForm = new CallMigrationForm();
        }

        callMigrationForm.resetForm();

        return callMigrationForm;
    }

    public void setClient(AudioManagerClient client) {
	this.client = client;
    }

    private void resetForm() {
        dialButton.setText("Transfer");
        dialButton.setEnabled(false);
        dialButton.setSelected(true);
        phoneNumberTextField.setText("");
        phoneNumberTextField.setEnabled(true);
        phoneTransferRadioButton.setSelected(true);
        callStatusLabel.setText("");
    }

    private CallMigrationForm() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButtonGroup1 = new javax.swing.ButtonGroup();
        phoneNumberTextField = new javax.swing.JTextField();
        closeButton = new javax.swing.JButton();
        dialButton = new javax.swing.JButton();
        callStatusLabel = new javax.swing.JLabel();
        phoneTransferRadioButton = new javax.swing.JRadioButton();
        connectSoftphoneRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Transfer Call");
        setResizable(false);

        phoneNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneNumberTextFieldKeyTyped(evt);
            }
        });

        closeButton.setFont(new java.awt.Font("Dialog", 0, 13));
        closeButton.setText("Close");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
        });

        dialButton.setFont(new java.awt.Font("Dialog", 0, 13));
        dialButton.setText("Transfer");
        dialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dialButtonActionPerformed(evt);
            }
        });

        callStatusLabel.setFont(new java.awt.Font("Dialog", 0, 13));
        callStatusLabel.setText("call status");

        radioButtonGroup1.add(phoneTransferRadioButton);
        phoneTransferRadioButton.setFont(new java.awt.Font("Dialog", 0, 13));
        phoneTransferRadioButton.setSelected(true);
        phoneTransferRadioButton.setText("Phone number:");
        phoneTransferRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTransferRadioButtonActionPerformed(evt);
            }
        });

        radioButtonGroup1.add(connectSoftphoneRadioButton);
        connectSoftphoneRadioButton.setFont(new java.awt.Font("Dialog", 0, 13));
        connectSoftphoneRadioButton.setText("Softphone");
        connectSoftphoneRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectSoftphoneRadioButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 13));
        jLabel1.setText("Transfer call to:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(dialButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(67, 67, 67))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(connectSoftphoneRadioButton)
                                        .add(195, 195, 195))
                                    .add(layout.createSequentialGroup()
                                        .add(phoneTransferRadioButton)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(phoneNumberTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))))
                            .add(jLabel1))
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(callStatusLabel)
                        .addContainerGap(274, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(phoneTransferRadioButton)
                    .add(phoneNumberTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(connectSoftphoneRadioButton)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dialButton)
                    .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(callStatusLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void phoneNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldKeyTyped
        setDialButtonState();
    }//GEN-LAST:event_phoneNumberTextFieldKeyTyped

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseClicked
        callStatusLabel.setText("");
        setVisible(false);
}//GEN-LAST:event_closeButtonMouseClicked

    private void setDialButtonState() {
        if (connectSoftphoneRadioButton.isSelected()) {
            dialButton.setEnabled(true);
        } else {
            phoneNumberTextField.setEnabled(true);

            String text = phoneNumberTextField.getText();

            if (text != null && text.length() > 0) {
                dialButton.setEnabled(true);
                getRootPane().setDefaultButton(dialButton);
            } else {
                dialButton.setEnabled(false);
            }
        }
    }

    private void dialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dialButtonActionPerformed
        if (dialButton.getText().equals("Transfer")) {
            callStatusLabel.setText("Transferring call...");

            if (connectSoftphoneRadioButton.isSelected()) {
                client.reconnectSoftphone();
                callStatusLabel.setText("");
                setVisible(false);
            } else {
                dialButton.setText("Cancel Call");
                phoneNumberTextField.setEnabled(false);

                client.transferCall(phoneNumberTextField.getText());
            }
        } else {
            dialButton.setText("Transfer");
            phoneNumberTextField.setEnabled(true);
            callStatusLabel.setText("");
            client.cancelCallTransfer();
        }

    }//GEN-LAST:event_dialButtonActionPerformed

private void connectSoftphoneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectSoftphoneRadioButtonActionPerformed
    phoneNumberTextField.setEnabled(false);
    dialButton.setEnabled(true);
}//GEN-LAST:event_connectSoftphoneRadioButtonActionPerformed

private void phoneTransferRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTransferRadioButtonActionPerformed
    phoneNumberTextField.setEnabled(true);
    setDialButtonState();
}//GEN-LAST:event_phoneTransferRadioButtonActionPerformed
    
    public void setCallStatus(String callId, String callStatus) {
	if (callStatus.indexOf("Ended") >= 0) {
	    if (callStatus.indexOf("Not Found") >= 0) {
		callStatusLabel.setText("Invalid phone number");
	    } else if (callStatus.indexOf("User requested call termination") >= 0) {
		callStatusLabel.setText("Hung up");
	    } else {
	        callStatusLabel.setText(callStatus);
	    }

	    dialButton.setText("Transfer");
	    setDialButtonState();
	} else if (callStatus.indexOf("Migrated") >= 0 ||
	        callStatus.indexOf("Established") >= 0) {

	    dialButton.setText("Transfer");
	    setDialButtonState();
	    callStatusLabel.setText("");
	    setVisible(false);
	} else if (callStatus.indexOf("Migration Failed") >= 0) {
	    callStatusLabel.setText("Call Transfer failed");
	    dialButton.setText("Transfer");
	    setDialButtonState();
	}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel callStatusLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton connectSoftphoneRadioButton;
    private javax.swing.JButton dialButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JRadioButton phoneTransferRadioButton;
    private javax.swing.ButtonGroup radioButtonGroup1;
    // End of variables declaration//GEN-END:variables
}
