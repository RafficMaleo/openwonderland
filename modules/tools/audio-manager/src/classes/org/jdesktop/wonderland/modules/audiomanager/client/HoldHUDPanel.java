/*
 * HoldHUDPanel.java
 *
 * Created on July 14, 2009, 10:59 AM
 */

package org.jdesktop.wonderland.modules.audiomanager.client;

import org.jdesktop.wonderland.client.comms.WonderlandSession;

import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.NameTagNode;

import org.jdesktop.wonderland.modules.audiomanager.common.messages.voicechat.VoiceChatInfoRequestMessage;
import org.jdesktop.wonderland.modules.audiomanager.common.messages.voicechat.VoiceChatLeaveMessage;

import org.jdesktop.wonderland.modules.presencemanager.common.PresenceInfo;

import org.jdesktop.wonderland.client.hud.HUDComponent;
import org.jdesktop.wonderland.client.hud.HUDEvent;
import org.jdesktop.wonderland.client.hud.HUDEvent.HUDEventType;
import org.jdesktop.wonderland.client.hud.HUDEventListener;

import java.util.ArrayList;

/**
 *
 * @author  jp
 */
public class HoldHUDPanel extends javax.swing.JPanel implements MemberChangeListener {

    private AudioManagerClient client;
    private WonderlandSession session;
    private String group;
    private InCallHUDPanel inCallHUDPanel;
    private PresenceInfo myPresenceInfo;

    private HUDComponent holdHUDComponent;

    /** Creates new form HoldHUDPanel */
    public HoldHUDPanel() {
        initComponents();
    }

    public HoldHUDPanel(AudioManagerClient client, WonderlandSession session,
            String group, InCallHUDPanel inCallHUDPanel, PresenceInfo myPresenceInfo) {

	this.client = client;
	this.session = session;
	this.group = group;
	this.inCallHUDPanel = inCallHUDPanel;
	this.myPresenceInfo = myPresenceInfo;

        initComponents();

	client.addMemberChangeListener(group, this);

        session.send(client, new VoiceChatInfoRequestMessage(group));
    }

    public void setHUDComponent(HUDComponent holdHUDComponent) {
	this.holdHUDComponent = holdHUDComponent;

	holdHUDComponent.setName("Hold");

	holdHUDComponent.addEventListener(new HUDEventListener() {
            public void HUDObjectChanged(HUDEvent e) {
                if (e.getEventType().equals(HUDEventType.CLOSED)) {
                    session.send(client, new VoiceChatLeaveMessage(group, myPresenceInfo));
		    inCallHUDPanel.setClosed();
                }
            }
        });
    }

    private ArrayList<PresenceInfo> members = new ArrayList();

    public void setMemberList() {
	String s = "";

	for (PresenceInfo member : members) {
	    s += NameTagNode.getDisplayName(
                member.usernameAlias, member.isSpeaking, member.isMuted);

	    s += " ";
	}

	final String text = s;

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
		memberText.setText(text);
            }
        });
    }

    public void memberChange(PresenceInfo info, boolean added) {
	if (added) {
	    members.add(info);
	} else {
	    members.remove(info);
	}

	setMemberList();
    }

    public void setMemberList(PresenceInfo[] presenceInfo) {
	members.clear();

	for (int i = 0; i < presenceInfo.length; i++) {
	     members.add(presenceInfo[i]);
	}

	setMemberList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        holdButton = new javax.swing.JButton();
        volumeSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        memberText = new javax.swing.JLabel();

        holdButton.setText("Take Off Hold");
        holdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdButtonActionPerformed(evt);
            }
        });

        volumeSlider.setMajorTickSpacing(1);
        volumeSlider.setMaximum(10);
        volumeSlider.setPaintLabels(true);
        volumeSlider.setPaintTicks(true);
        volumeSlider.setSnapToTicks(true);
        volumeSlider.setValue(1);
        volumeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeSliderStateChanged(evt);
            }
        });

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel1.setText("On hold volume:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .add(volumeSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(memberText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(holdButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(volumeSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(memberText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(holdButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void volumeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeSliderStateChanged
    inCallHUDPanel.setHold(true, volumeSlider.getValue());
}//GEN-LAST:event_volumeSliderStateChanged

private void holdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdButtonActionPerformed
    inCallHUDPanel.setHold(false, 0);
}//GEN-LAST:event_holdButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton holdButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel memberText;
    private javax.swing.JSlider volumeSlider;
    // End of variables declaration//GEN-END:variables

}
