/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AvatarConfigFrame.java
 *
 * Created on Feb 9, 2009, 4:47:34 PM
 */

package org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer;

import imi.character.CharacterAttributes;
import imi.character.avatar.Avatar;
import imi.character.avatar.FemaleAvatarAttributes;
import imi.character.avatar.MaleAvatarAttributes;
import java.io.File;
import org.jdesktop.mtgame.WorldManager;
import org.jdesktop.wonderland.client.ClientContext;
import org.jdesktop.wonderland.client.comms.WonderlandSession;
import org.jdesktop.wonderland.client.jme.ClientContextJME;
import org.jdesktop.wonderland.client.login.LoginManager;
import org.jdesktop.wonderland.client.login.ServerSessionManager;

/**
 *
 * @author paulby
 */
public class AvatarConfigFrame extends javax.swing.JFrame {

    private AvatarImiJME avatarRenderer;

    /** Creates new form AvatarConfigFrame */
    public AvatarConfigFrame(AvatarImiJME avatarRenderer) {
        this.avatarRenderer = avatarRenderer;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGrou = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        maleRB = new javax.swing.JRadioButton();
        femaleRB = new javax.swing.JRadioButton();
        applyB = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        randomizeB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Avatar Configuration");

        jLabel1.setText("Avatar Name");

        genderGrou.add(maleRB);
        maleRB.setSelected(true);
        maleRB.setText("Male");

        genderGrou.add(femaleRB);
        femaleRB.setText("Female");

        applyB.setText("Apply as Default");
        applyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyBActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        randomizeB.setText("Randomize");
        randomizeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizeBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(applyB))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maleRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(femaleRB))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(randomizeB)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleRB)
                    .addComponent(femaleRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizeB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(applyB)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void randomizeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomizeBActionPerformed

        CharacterAttributes attributes;
        String name = "foo";

        if (femaleRB.isSelected())
            attributes = new FemaleAvatarAttributes(name, true);
        else
            attributes = new MaleAvatarAttributes(name, true);
        WonderlandSession session = avatarRenderer.getCell().getCellCache().getSession();
        ServerSessionManager manager = LoginManager.find(session);
        String serverHostAndPort = manager.getServerNameAndPort();
        attributes.setBaseURL("wla://avatarbase@"+serverHostAndPort+"/");

        WorldManager wm = ClientContextJME.getWorldManager();
        WlAvatarCharacter avatarCharacter = new WlAvatarCharacter(attributes, wm);

        avatarRenderer.changeAvatar(avatarCharacter);
    }//GEN-LAST:event_randomizeBActionPerformed

    private void applyBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBActionPerformed

        File saveFile = getDefaultAvatarConfigFile();

        if (saveFile.exists()) {
            // TOOD overwriting default file, ask user
            // if they really intended to
        }

        avatarRenderer.getAvatarCharacter().saveConfiguration(saveFile);
    }//GEN-LAST:event_applyBActionPerformed

    /**
     * Return the directory which contains the avatar co
     * @return
     */
    static File getAvatarConfigDir() {
        File userDir = ClientContext.getUserDirectory();
        File avatarDir = new File(userDir, "avatars");
        if (!avatarDir.exists())
            avatarDir.mkdir();
        return avatarDir;
    }

    /**
     * Returns the default avatar config file. The file may
     * or may not exist.
     * @return
     */
    static File getDefaultAvatarConfigFile() {
        return new File(getAvatarConfigDir(), "avatar_config.xml");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyB;
    private javax.swing.JRadioButton femaleRB;
    private javax.swing.ButtonGroup genderGrou;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton maleRB;
    private javax.swing.JButton randomizeB;
    // End of variables declaration//GEN-END:variables

}
