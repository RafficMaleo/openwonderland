<?xml version="1.0" encoding="UTF-8"?>
<project name="servertest-common" basedir="...">
    <property name="core.dir" location="${top.dir}/core"/>
    
    <!-- Use my-build.properties to override default values in build.properties -->
    <property file="${current.dir}/my.build.properties"/>
    <property file="${test.import.dir}/build.properties"/>
    <property file="${core.dir}/my.build.properties"/>
    <property file="${core.dir}/build.properties"/>
    
    <property name="project.name" value="${ant.project.name}"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${build-import.dir}/ant-contrib.jar"/>
        </classpath>
    </taskdef>
    
    <!-- Do platform/x11/environment specific setup common to all tasks -->
    <import file="${build-import.dir}/build-setup.xml"/>
    
    <!-- core directory -->
    <property name="core.platform.dir" value="${core.dir}/build/${build.location}"/>
    <property name="core.lib.dir" location="${core.platform.dir}/lib"/>
    
    <!-- Initialization - make dirs, unpack ext stuff... -->
    <target name="init">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
    </target>
   
    <target name="compile-common" depends="init">
        <wl-compile>
            <compile-classes>
                <include name="${servertest.src}/common/**"/>
            </compile-classes>
            
            <compile-classpath>
		<pathelement path="${wonderland-common-compile.classpath}"/>
                <pathelement path="${core.lib.dir}/wonderland-common.jar"/>
	    </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-server" depends="init, compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${servertest.src}/server/**"/>
            </compile-classes>
            
            <compile-classpath>
		<pathelement path="${wonderland-server-compile.classpath}"/>
                <pathelement path="${core.lib.dir}/wonderland-server.jar"/>
                <pathelement path="${core.lib.dir}/wonderland-common.jar"/>
	    </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="compile-client" depends="init, compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${servertest.src}/client/**"/>
            </compile-classes>
            
            <compile-classpath>
		<pathelement path="${wonderland-client-compile.classpath}"/>
                <pathelement path="${core.lib.dir}/wonderland-client.jar"/>
                <pathelement path="${core.lib.dir}/wonderland-common.jar"/>
	    </compile-classpath>
        </wl-compile>
    </target>
            
    <target name="jar-server" depends="compile-server, -jar-server-noplugins, -jar-server-plugins"/>
    
    <target name="-jar-server-plugins" if="servertest.plugins">
        <wl-services dir="${build.dir}/${servertest.jarname}"
                     type="org.jdesktop.wonderland.server.ServerPlugin">
            <providers>
                ${servertest.packagename}.server.${servertest.plugins}
            </providers>
        </wl-services>
        
        <jar compress="${jar.compress}" jarfile="${build.lib.dir}/${servertest.jarname}-server.jar">   
            <fileset dir="${build.classes.dir}">
		<include name="${servertest.src}/common/**"/>
                <include name="${servertest.src}/server/**"/>
	    </fileset>
            <fileset dir="${build.dir}/${servertest.jarname}">
                <include name="**"/>
            </fileset>
        </jar>
    </target>
    
    <target name="-jar-server-noplugins" unless="servertest.plugins">
        <jar compress="${jar.compress}" jarfile="${build.lib.dir}/${servertest.jarname}-server.jar">   
            <fileset dir="${build.classes.dir}">
		<include name="${servertest.src}/common/**"/>
                <include name="${servertest.src}/server/**"/>
	    </fileset>
        </jar>
    </target>
    
    <target name="jar-client" depends="compile-client">
        <jar compress="${jar.compress}" jarfile="${build.lib.dir}/${servertest.jarname}-client.jar">
            <fileset dir="${build.classes.dir}">
		<include name="${servertest.src}/common/**"/>
                <include name="${servertest.src}/client/**"/>
	    </fileset>
        </jar>
    </target>
    
    <!-- override target used by run-sgs -->
    <target name="modules-server-classpath">
        <pathconvert property="module-server.classpath">
            <path location="${build.lib.dir}/${servertest.jarname}-server.jar"/>
            <path location="${core.lib.dir}/wonderland-server.jar"/>
            <path location="${core.lib.dir}/wonderland-common.jar"/>
        </pathconvert>
    </target>
   
    <target name="-do-run-server" depends="jar-server">
        <!-- turn on assertions -->
        <property name="use.assertions" value="true"/>
        
        <antcall target="run-sgs"/>
    </target>
    
    <target name="-do-run-client" depends="jar-client">
        <mkdir dir="log"/>
        
        <java classname="${servertest.packagename}.client.ClientMain">
            <jvmarg value="-Dsgs.server=${sgs.server}"/>
            <jvmarg value="-Dsgs.port=${sgs.port}"/>
            <jvmarg value="-Dsgs.username=${sgs.username}"/>
            <jvmarg value="-Dsgs.password=${sgs.password}"/>
            
            <jvmarg value="-Djava.util.logging.config.class=org.jdesktop.wonderland.client.LogControl"/>
            
            <classpath>
                <pathelement path="${wonderland-client.classpath}"/>
                <path location="${build.lib.dir}/${servertest.jarname}-client.jar"/>
                <path location="${core.lib.dir}/wonderland-client.jar"/>
                <path location="${core.lib.dir}/wonderland-common.jar"/>
            </classpath>
            
            <assertions>
                <enable/>
            </assertions>
        </java>
    </target>
    
    <target name="-do-clean">
        <delete dir="${build.dir}"/>
        <delete dir="data"/>
        <delete dir="log"/>
    </target>
    
    <import file="${build-import.dir}/run-sgs.xml"/>
</project>
